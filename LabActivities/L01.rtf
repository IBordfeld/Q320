{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh12240\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 For lecture tomorrow: Reminder to have a spreadsheet with student\'92s initials as rows and lectures and labs as columns and to take attendance while attending lectures, adding a 0 for those not present, a 1 for those present that do not participate, and a 2 for those present that participate/engage. \
\

\f1\b \ul \
L01 - Basics (Week 1)
\f0\b0 \ulnone \
\

\f1\b 0. Prep (1 hour). \

\f0\b0 Before lab, go through as many of the submitted assignments as possible. \
Make a note of the things you see that you want to comment on. \
\

\f1\b 1.[2.30pm] Intro and self-assessment (10mins). \

\f0\b0 First 10mins of lab, go through each person, have some sort of ice-breaker - ask them something about them - introduce yourself, and ask them about the self-assessment (if they were to grade themselves from 0 to 10, with 0 being novice, the assignment was very hard, and 10 being expert programmer, the assignment was nothing). We will use this to annotate on our spreadsheet people into three internal categories: beginner, intermediate, advanced (to use for peer-programming). \
\

\f1\b 2. [2.40pm] Walk through self-assessment assignment 1-9 (20mins). \

\f0\b0 (a) Use a good one as an example, such as the one by Isaac Bordfeld, perhaps others. \
(b) Form and logistics. Things to note about the form: \
- Include names and assignment number at the top.\
- Include a comment for each of the questions they are solving (#1, #2, etc). \
- Answer one per cell. \
(c) Ask students to volunteer to explain each of the exercises and answer questions.\
Throughout this, the emphasis should be clarify the \'93basics.\'94 Specifically, we mean: variables, expressions, conditionals, functions, iteration, lists, strings. We should make sure people understand those. The Numpy and Matplotlib work we will go in detail into next week. In this sense, you could stop after working through question #9 (leaving #10 and #11) for class on Monday. \
\

\f1\b 3. [3pm] In-class peer-programming activity (20mins).
\f0\b0 \
Design a two-person class activity to solve a problem that includes variables, expressions, conditionals, functions, iteration, lists, strings. (Three example questions in Github, feel free to edit/modify).\
Create break out rooms with two people each (pair advanced with beginners as much as possible). \
}